/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

// Generated for Arduino AVR/Uno/Mega by TcMenu 4.3.1 on 2024-10-12T11:23:21.762740700Z.

#include <tcMenu.h>
#include "analogDfRobot_menu.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "DfRobot", "2ba37227-a412-40b7-94e7-42caf9bb0ff4" };

LiquidCrystal lcd(8, 9, 4, 5, 6, 7);
LiquidCrystalRenderer renderer(lcd, 16, 2);

// Global Menu Item declarations
const PROGMEM AnalogMenuInfo minfoCommits = { "Commits", 7, 0xffff, 65000, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menuCommits(&minfoCommits, 0, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoChooseItem = { "Choose Item", 8, 18, 0, NO_CALLBACK };
ScrollChoiceMenuItem menuChooseItem(&minfoChooseItem, fnChooseItemRtCall, 0, 20, &menuCommits, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoText = { "Text", 6, 4, 0, NO_CALLBACK };
TextMenuItem menuText(&minfoText, "", 6, &menuChooseItem, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoLgeNum = { "LgeNum", 5, 10, 0, NO_CALLBACK };
EditableLargeNumberMenuItem menuLgeNum(&minfoLgeNum, LargeFixedNumber(8, 4, 0U, 0U, false), true, &menuText, INFO_LOCATION_PGM);
const PROGMEM BooleanMenuInfo minfoL2 = { "L2", 4, 3, 1, onLed2, NAMING_ON_OFF };
BooleanMenuItem menuL2(&minfoL2, false, nullptr, INFO_LOCATION_PGM);
const PROGMEM BooleanMenuInfo minfoL1 = { "L1", 3, 2, 1, onLed1, NAMING_ON_OFF };
BooleanMenuItem menuL1(&minfoL1, false, &menuL2, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoLEDStates = { "LED States", 2, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackLEDStates(&minfoLEDStates, &menuL1, INFO_LOCATION_PGM);
SubMenuItem menuLEDStates(&minfoLEDStates, &menuBackLEDStates, &menuLgeNum, INFO_LOCATION_PGM);
const PROGMEM AnalogMenuInfo minfoValueA0 = { "Value A0", 1, 0xffff, 1024, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menuValueA0(&minfoValueA0, 0, &menuLEDStates, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(false);
    // Now add any readonly, non-remote and visible flags.
    menuValueA0.setReadOnly(true);
    menuCommits.setReadOnly(true);

    // Code generated by plugins and new operators.
    lcd.begin(16, 2);
    renderer.setUpdatesPerSecond(2);
    lcd.configureBacklightPin(10);
    lcd.backlight();
    pinMode(A0, INPUT);
    switches.initialise(inputFromDfRobotShield(), false);
    menuMgr.initFor4WayJoystick(&renderer, &menuValueA0, DF_KEY_DOWN, DF_KEY_UP, DF_KEY_LEFT, DF_KEY_RIGHT, DF_KEY_SELECT, 10);
}

