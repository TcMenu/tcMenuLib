/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include <tcUnicodeHelper.h>
#include "tcMenuAdaFruitGfx.h"
#include <tcMenuKeyboard.h>
#include <RuntimeMenuItem.h>
#include <ScrollChoiceMenuItem.h>
#include <IoAbstraction.h>
#include <IoAbstractionWire.h>
#include <EepromItemStorage.h>

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern Adafruit_ST7735 gfx;
extern AdafruitDrawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;
extern MatrixKeyboardManager keyboard;
extern MenuEditingKeyListener tcMenuKeyListener;
extern const UnicodeFont OpenSansRegular8pt[];
extern const UnicodeFont OpenSansCyrillicLatin12[];

// Any externals needed by IO expanders, EEPROMs etc
extern IoAbstractionRef ioexp_io23017;

// Global Menu Item exports
extern TextMenuItem menuRuntimesOctal;
extern IpAddressMenuItem menuIpItem;
extern TextMenuItem menuTextItem;
extern BackMenuItem menuBackRuntimes;
extern SubMenuItem menuRuntimes;
extern ListRuntimeMenuItem menuList;
extern BooleanMenuItem menuDialogsBlockedBool;
extern ActionMenuItem menuDialogsBlockedAction;
extern BackMenuItem menuBackDialogsBlockedSub;
extern SubMenuItem menuDialogsBlockedSub;
extern BooleanMenuItem menuDialogsDialogBack;
extern ActionMenuItem menuDialogsController;
extern ActionMenuItem menuDialogsInformation;
extern AnyMenuInfo minfoDialogsQuestion;
extern ActionMenuItem menuDialogsQuestion;
extern BackMenuItem menuBackDialogs;
extern SubMenuItem menuDialogs;
extern ActionMenuItem menuPizzaMakerStartCooking;
extern ScrollChoiceMenuItem menuPizzaMakerTopping3;
extern ScrollChoiceMenuItem menuPizzaMakerTopping2;
extern ScrollChoiceMenuItem menuPizzaMakerTopping1;
extern AnalogMenuItem menuPizzaMakerOvenTemp;
extern BackMenuItem menuBackPizzaMaker;
extern SubMenuItem menuPizzaMaker;
extern BackMenuItem menuBackOven;
extern SubMenuItem menuOven;
extern BooleanMenuItem menuMainPower;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuMainPower; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

int fnListRtCall(RuntimeMenuItem* item, uint8_t row, RenderFnMode mode, char* buffer, int bufferSize);
int octalOnlyRtCall(RuntimeMenuItem* item, uint8_t row, RenderFnMode mode, char* buffer, int bufferSize);
void CALLBACK_FUNCTION onDialogBack(int id);
void CALLBACK_FUNCTION onDialogController(int id);
void CALLBACK_FUNCTION onDialogInfo(int id);
void CALLBACK_FUNCTION onDialogQuestion(int id);
void CALLBACK_FUNCTION onStartCooking(int id);

#endif // MENU_GENERATED_CODE_H
