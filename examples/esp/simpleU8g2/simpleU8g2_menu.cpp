/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

// Generated for Arduino ESP8266 by TcMenu 4.3.1 on 2024-09-28T17:02:47.500480100Z.

#include <tcMenu.h>
#include "simpleU8g2_menu.h"
#include "ThemeMonoBorderedBuilder.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "Simple U8G2 Toaster", "fddaa423-cb5c-4024-8f67-a9742f4457f3" };
ArduinoEEPROMAbstraction glArduinoEeprom(&EEPROM);
U8G2_SH1106_128X64_NONAME_F_SW_I2C gfx(U8G2_R0, 5, 4, U8X8_PIN_NONE);
U8g2Drawable gfxDrawable(&gfx, &Wire);
GraphicsDeviceRenderer renderer(30, applicationInfo.name, &gfxDrawable);

// Global Menu Item declarations
const PROGMEM AnyMenuInfo minfoExtrasDate = { "Date", 14, 0xffff, 0, NO_CALLBACK };
DateFormattedMenuItem menuExtrasDate(&minfoExtrasDate, DateStorage(1, 1, 2022), nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoExtrasTime = { "Time", 13, 0xffff, 0, NO_CALLBACK };
TimeFormattedMenuItem menuExtrasTime(&minfoExtrasTime, TimeStorage(14, 00, 00, 0), (MultiEditWireType)2, &menuExtrasDate, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoExtrasIp = { "Ip", 12, 0xffff, 0, NO_CALLBACK };
IpAddressMenuItem menuExtrasIp(&minfoExtrasIp, IpAddressStorage(192, 168, 0, 0), &menuExtrasTime, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoExtrasRGB = { "RGB", 11, 0xffff, 0, NO_CALLBACK };
Rgb32MenuItem menuExtrasRGB(&minfoExtrasRGB, RgbColor32(221, 85, 238), false, &menuExtrasIp, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoExtras = { "Extras", 10, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackExtras(&minfoExtras, &menuExtrasRGB, INFO_LOCATION_PGM);
SubMenuItem menuExtras(&minfoExtras, &menuBackExtras, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSettingsSaveSettings = { "SaveSettings", 9, 0xffff, 0, onSaveSettings };
ActionMenuItem menuSettingsSaveSettings(&minfoSettingsSaveSettings, nullptr, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSettingsSerialNumber = { "Serial Number", 8, 7, 0, NO_CALLBACK };
EditableLargeNumberMenuItem menuSettingsSerialNumber(&minfoSettingsSerialNumber, LargeFixedNumber(8, 0, 0U, 0U, false), true, &menuSettingsSaveSettings, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoSettingsUserName = { "User Name", 7, 16, 0, onNameChanged };
TextMenuItem menuSettingsUserName(&minfoSettingsUserName, "", 5, &menuSettingsSerialNumber, INFO_LOCATION_PGM);
const PROGMEM BooleanMenuInfo minfoSettingsSafetyLock = { "Safety lock", 6, 15, 1, NO_CALLBACK, NAMING_TRUE_FALSE };
BooleanMenuItem menuSettingsSafetyLock(&minfoSettingsSafetyLock, false, &menuSettingsUserName, INFO_LOCATION_PGM);
const PROGMEM SubMenuInfo minfoSettings = { "Settings", 5, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettings(&minfoSettings, &menuSettingsSafetyLock, INFO_LOCATION_PGM);
SubMenuItem menuSettings(&minfoSettings, &menuBackSettings, &menuExtras, INFO_LOCATION_PGM);
const PROGMEM AnyMenuInfo minfoStartToasting = { "Start toasting", 4, 0xffff, 0, onStartToasting };
ActionMenuItem menuStartToasting(&minfoStartToasting, &menuSettings, INFO_LOCATION_PGM);
const PROGMEM BooleanMenuInfo minfoFrozen = { "Frozen", 3, 6, 1, NO_CALLBACK, NAMING_YES_NO };
BooleanMenuItem menuFrozen(&minfoFrozen, false, &menuStartToasting, INFO_LOCATION_PGM);
const char enumStrType_0[] PROGMEM = "Bread";
const char enumStrType_1[] PROGMEM = "Bagel";
const char enumStrType_2[] PROGMEM = "Pancake";
const char* const enumStrType[] PROGMEM  = { enumStrType_0, enumStrType_1, enumStrType_2 };
const PROGMEM EnumMenuInfo minfoType = { "Type", 2, 4, 2, NO_CALLBACK, enumStrType };
EnumMenuItem menuType(&minfoType, 0, &menuFrozen, INFO_LOCATION_PGM);
const PROGMEM AnalogMenuInfo minfoToasterPower = { "Toaster power", 1, 2, 10, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menuToasterPower(&minfoToasterPower, 0, &menuType, INFO_LOCATION_PGM);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).
    setSizeBasedEEPROMStorageEnabled(false);
    menuMgr.setEepromRef(&glArduinoEeprom);
    // Code generated by plugins and new operators.
    gfx.begin();
    renderer.setUpdatesPerSecond(10);
    switches.init(internalDigitalIo(), SWITCHES_POLL_EVERYTHING, true);
    menuMgr.initForEncoder(&renderer, &menuToasterPower, 13, 12, 14);
    installMonoBorderTitleTheme(renderer, MenuFontDef(nullptr, 1), MenuFontDef(u8g2_font_finderskeepers_tf, 1), true, BaseGraphicalRenderer::TITLE_FIRST_ROW, false);
}

