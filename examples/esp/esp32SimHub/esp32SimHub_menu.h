/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#ifndef MENU_GENERATED_CODE_H
#define MENU_GENERATED_CODE_H

#include <Arduino.h>
#include <tcMenu.h>
#include <tcUnicodeHelper.h>
#include "tcMenuAdaFruitGfx.h"
#include <esp32/ESP32TouchKeysAbstraction.h>
#include "SimhubConnector.h"
#include <RuntimeMenuItem.h>
#include <EditableLargeNumberMenuItem.h>
#include <RemoteMenuItem.h>
#include <IoAbstraction.h>
#include <EepromItemStorage.h>

// variables we declare that you may need to access
extern const PROGMEM ConnectorLocalInfo applicationInfo;
extern TcMenuRemoteServer remoteServer;
extern Adafruit_ILI9341 gfx;
extern AdafruitDrawable gfxDrawable;
extern GraphicsDeviceRenderer renderer;
extern ESP32TouchKeysAbstraction esp32Touch;
extern const UnicodeFont OpenSansCyrillicLatin14[];
extern const UnicodeFont OpenSansCyrillicLatin18[];

// Any externals needed by IO expanders, EEPROMs etc


// Global Menu Item exports
extern ActionMenuItem menuEngineV836S;
extern ActionMenuItem menuEngineV630T;
extern ActionMenuItem menuEngineI420T;
extern ActionMenuItem menuCardsI416T;
extern BackMenuItem menuBackEngine;
extern SubMenuItem menuEngine;
extern ActionMenuItem menuShowDashboard;
extern AnalogMenuItem menuLap;
extern EnumMenuItem menuDashboard;
extern EditableLargeNumberMenuItem menuSettingsNewLargeNumber;
extern RemoteMenuItem menuSettingsIoTMonitor;
extern EditableLargeNumberMenuItem menuSettingsLargeTest;
extern BooleanMenuItem menuSettingsOverboost;
extern ActionMenuItem menuSettingsShowDialogs;
extern AnalogMenuItem menuSettingsTestItem1;
extern BackMenuItem menuBackSettings;
extern SubMenuItem menuSettings;
extern BooleanMenuItem menuSimHubLink;
extern AnalogMenuItem menuTyreTemp;
extern TextMenuItem menuGear;
extern AnalogMenuItem menuRPM;
extern AnalogMenuItem menuSpeed;

// Provide a wrapper to get hold of the root menu item and export setupMenu
inline MenuItem& rootMenuItem() { return menuSpeed; }
void setupMenu();

// Callback functions must always include CALLBACK_FUNCTION after the return type
#define CALLBACK_FUNCTION

void CALLBACK_FUNCTION onConnectionChange(int id);
void CALLBACK_FUNCTION onDashChanged(int id);
void CALLBACK_FUNCTION onEngineHasChanged(int id);
void CALLBACK_FUNCTION onShowDash(int id);
void CALLBACK_FUNCTION onShowDialogs(int id);

#endif // MENU_GENERATED_CODE_H
